eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
spring.application.name=api-gateway
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator = INFO
logging.level.org.springframework.cloud.gateway = TRACE

## Product Service Route (Mapping the routes from api-gateway to the product service)
## lb = load balancing
spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product

## Order Service Route
## 2nd route, so we have to change the index
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order

## Discover Server Route
spring.cloud.gateway.routes[2].id=discovery-server
spring.cloud.gateway.routes[2].uri=http://localhost:8761
## -> http://localhost:8080/eureka/web this calls the server
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
## changes the path of url
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

## Discover Server Static Resources Route to load the css and javascript files
spring.cloud.gateway.routes[3].id=discovery-server-static
spring.cloud.gateway.routes[3].uri=http://loaclhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**

spring.security.oauth2.resourceserver.jwt.issuer-uri= http://localhost:8181/realms/spring-boot-microservices-realm

# Zipkin configuration. 2nd line -> track 100% of the requests
management.zipkin.tracing.endpoint=http://localhost:9411
management.tracing.sampling.probability=1.0

# Actuator Prometheus Endpoint
# include prometheus endpoints
management.endpoints.web.exposure.include= prometheus
server.port=8181
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
